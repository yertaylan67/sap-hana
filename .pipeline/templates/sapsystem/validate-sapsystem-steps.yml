steps:
  - script: |
      set -e
      
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
      source /etc/profile.d/deploy_server.sh

      # Modify environment value so it starts with u and with length of 5
      sapsystem_env=${{parameters.sapsystem_env}}
      buildId=$(Build.BuildId)
      isRelease=${sapsystem_env%%$buildId*}

      if [ -z "${isRelease}" ]
      then 
        sapsystem_prefix="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"
      else
        sapsystem_prefix=${sapsystem_env}
      fi

      sapsystem_rg="${sapsystem_prefix}-EAUS-SAP-PRD"
      
      repo_dir=$HOME/${sapsystem_rg}/sap-hana
      ws_dir=$HOME/Azure_SAP_Automated_Deployment/WORKSPACES/SAP_SYSTEM/${sapsystem_rg}
      input=${ws_dir}/${sapsystem_rg}.json

      echo "=== Checkout required branch ${{parameters.branch_name}} ==="
      cd $HOME/${sapsystem_rg}/sap-hana && git checkout ${{parameters.branch_name}}
      
      echo "=== Enter workspace ${ws_dir} ==="
      cd ${ws_dir}

      terraform init -upgrade=true ${repo_dir}/deploy/terraform/run/sap_landscape/
      terraform plan -var-file=${input} ${repo_dir}/deploy/terraform/run/sap_landscape/ > plan_output.log
      cat plan_output.log
      
      # include 1 to add, 0 to change, 1 to destroy as expected result, due to regeneration of output.json
      if ! grep "No changes\|0 to change, 0 to destroy\|1 to add, 0 to change, 1 to destroy" plan_output.log; then exit 1; fi;
      '
    displayName: "Validate sap system new config"
    env:
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)
